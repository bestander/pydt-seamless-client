{
  "name": "pydt-mini",
  "version": "1.3.0",
  "description": "Minimalist desktop application for PYDT integration",
  "main": "dist/main.js",
  "scripts": {
    "dev": "tsc && electron .",
    "clean": "rimraf dist && rimraf release",
    "build": "npm run clean && tsc && electron-builder",
    "watch": "tsc -w",
    "icons": "node -e \"const toIco = require('to-ico'); const fs = require('fs'); const path = require('path'); const assetsDir = 'assets'; fs.readdirSync(assetsDir).filter(file => path.extname(file) === '.png').forEach(async (pngFile) => { const pngPath = path.join(assetsDir, pngFile); const icoPath = path.join(assetsDir, path.basename(pngFile, '.png') + '.ico'); const buf = await toIco([fs.readFileSync(pngPath)]); fs.writeFileSync(icoPath, buf); console.log('Converted', pngFile, 'to', path.basename(icoPath)); });\""
  },
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "@types/node": "^20.11.24",
    "electron": "^29.1.0",
    "electron-builder": "^24.12.0",
    "rimraf": "^5.0.5",
    "to-ico": "^1.1.5",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "@types/chokidar": "^1.7.5",
    "axios": "^1.8.4",
    "chokidar": "^4.0.3",
    "electron-store": "^8.1.0"
  },
  "build": {
    "appId": "com.pydt.mini",
    "mac": {
      "category": "public.app-category.utilities",
      "target": [
        "dmg",
        "zip"
      ],
      "icon": "assets/tray-icon.icns",
      "identity": null,
      "hardenedRuntime": true,
      "gatekeeperAssess": false,
      "entitlements": "build/entitlements.mac.plist",
      "entitlementsInherit": "build/entitlements.mac.plist"
    },
    "win": {
      "target": "nsis",
      "icon": "assets/tray-icon.ico"
    },
    "linux": {
      "target": "AppImage",
      "icon": "assets/tray-icon.png"
    },
    "files": [
      "dist/**/*",
      "package.json",
      "assets/**/*"
    ],
    "extraResources": [
      {
        "from": "assets",
        "to": "assets",
        "filter": [
          "**/*"
        ]
      }
    ],
    "asar": true,
    "asarUnpack": [
      "assets/**/*"
    ],
    "npmRebuild": false,
    "removePackageScripts": true,
    "removePackageKeywords": true,
    "compression": "maximum",
    "directories": {
      "output": "release"
    }
  }
}
